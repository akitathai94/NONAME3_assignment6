{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs22 \cf0 ===== CROSS-REFERENCE TABLE =====\
\
*** PROGRAM test ***\
\
Identifier       Line numbers    Type specification\
----------       ------------    ------------------\
h                005 009 009 017 017\
                                 Defined as: variable\
                                 Scope nesting level: 1\
                                 Type form = scalar, Type id = char\
i                003 011 011 012 014 014 014 019 020 021\
                                 Defined as: variable\
                                 Scope nesting level: 1\
                                 Type form = scalar, Type id = integer\
j                003 012 012 013 014 014 014 014 016 016 019 020 021\
                                 Defined as: variable\
                                 Scope nesting level: 1\
                                 Type form = scalar, Type id = integer\
k                003 013 013 020 021\
                                 Defined as: variable\
                                 Scope nesting level: 1\
                                 Type form = scalar, Type id = integer\
n                005 008 008 009\
                                 Defined as: variable\
                                 Scope nesting level: 1\
                                 Type form = scalar, Type id = char\
w                006 010 010\
                                 Defined as: variable\
                                 Scope nesting level: 1\
                                 Type form = enumeration, Type id = boolean\
x                004 018 018 019 019 021 021\
                                 Defined as: variable\
                                 Scope nesting level: 1\
                                 Type form = scalar, Type id = real\
y                004 018 020 020 021\
                                 Defined as: variable\
                                 Scope nesting level: 1\
                                 Type form = scalar, Type id = real\
z                004 021 021\
                                 Defined as: variable\
                                 Scope nesting level: 1\
                                 Type form = scalar, Type id = real\
\
===== INTERMEDIATE CODE =====\
\
*** PROGRAM test ***\
\
<compoundStatement>\
    <assignmentStatement type_id="integer">\
        <variable id="n" level="1" index="6" type_id="char" />\
        <charConstant value="'1'" type_id="char" />\
    </assignmentStatement>\
    <assignmentStatement type_id="integer">\
        <variable id="h" level="1" index="7" type_id="char" />\
        <variable id="n" level="1" index="6" type_id="char" />\
    </assignmentStatement>\
    <assignmentStatement type_id="integer">\
        <variable id="w" level="1" index="8" type_id="boolean" />\
        <variable id="true" level="0" index="0" type_id="boolean" />\
    </assignmentStatement>\
    <assignmentStatement type_id="integer">\
        <variable id="i" level="1" index="0" type_id="integer" />\
        <integerConstant value="-1" type_id="integer" />\
    </assignmentStatement>\
    <assignmentStatement type_id="integer">\
        <variable id="j" level="1" index="1" type_id="integer" />\
        <add type_id="integer">\
            <variable id="i" level="1" index="0" type_id="integer" />\
            <integerConstant value="3" type_id="integer" />\
        </add>\
    </assignmentStatement>\
    <assignmentStatement type_id="integer">\
        <variable id="k" level="1" index="2" type_id="integer" />\
        <multiply type_id="integer">\
            <integerConstant value="2" type_id="integer" />\
            <variable id="j" level="1" index="1" type_id="integer" />\
        </multiply>\
    </assignmentStatement>\
    <ifStatement>\
        <simpleExpressionStatement>\
            <variable id="j" level="1" index="1" type_id="integer" />\
            <variable id="i" level="1" index="0" type_id="integer" />\
        </simpleExpressionStatement>\
        <assignmentStatement>\
            <variable id="i" level="1" index="0" type_id="integer" />\
            <integerConstant value="3" type_id="integer" />\
        </assignmentStatement>\
        <assignmentStatement>\
            <variable id="j" level="1" index="1" type_id="integer" />\
            <integerConstant value="5" type_id="integer" />\
        </assignmentStatement>\
    </ifStatement>\
    <dowhileStatement>\
        <assignmentStatement>\
            <variable id="j" level="1" index="1" type_id="integer" />\
            <integerConstant value="3" type_id="integer" />\
        </assignmentStatement>\
        <assignmentStatement>\
            <variable id="h" level="1" index="7" type_id="char" />\
            <integerConstant value="4" type_id="integer" />\
        </assignmentStatement>\
        <simpleExpressionStatement>\
            <variable id="x" level="1" index="3" type_id="real" />\
            <variable id="y" level="1" index="4" type_id="real" />\
        </simpleExpressionStatement>\
    </dowhileStatement>\
    <assignmentStatement type_id="real">\
        <variable id="x" level="1" index="3" type_id="real" />\
        <add type_id="integer">\
            <variable id="i" level="1" index="0" type_id="integer" />\
            <variable id="j" level="1" index="1" type_id="integer" />\
        </add>\
    </assignmentStatement>\
    <assignmentStatement type_id="real">\
        <variable id="y" level="1" index="4" type_id="real" />\
        <add type_id="real">\
            <subtract type_id="real">\
                <add type_id="real">\
                    <realConstant value="3.1415925" type_id="real" />\
                    <variable id="i" level="1" index="0" type_id="integer" />\
                </add>\
                <variable id="j" level="1" index="1" type_id="integer" />\
            </subtract>\
            <variable id="k" level="1" index="2" type_id="integer" />\
        </add>\
    </assignmentStatement>\
    <assignmentStatement type_id="real">\
        <variable id="z" level="1" index="5" type_id="real" />\
        <subtract type_id="real">\
            <add type_id="real">\
                <variable id="x" level="1" index="3" type_id="real" />\
                <divide type_id="integer">\
                    <multiply type_id="integer">\
                        <variable id="i" level="1" index="0" type_id="integer" \
                        />\
                        <variable id="j" level="1" index="1" type_id="integer" \
                        />\
                    </multiply>\
                    <variable id="k" level="1" index="2" type_id="integer" />\
                </divide>\
            </add>\
            <divide type_id="real">\
                <variable id="x" level="1" index="3" type_id="real" />\
                <variable id="y" level="1" index="4" type_id="real" />\
            </divide>\
        </subtract>\
    </assignmentStatement>\
</compoundStatement>\
}